import React, { useState } from 'react';
import { Shield, CheckCircle, PlayCircle, PauseCircle, Settings } from 'lucide-react';

const MalwareProtection = () => {
  const [isScanning, setIsScanning] = useState(false);
  const [protectionStatus, setProtectionStatus] = useState('active');
  const [scanProgress, setScanProgress] = useState(0);
  
  // Mock data for last scan results
  const lastScanData = {
    date: new Date().toLocaleDateString(),
    threatsFound: 0,
    filesScanned: 23567,
    lastThreatDetected: '3 days ago'
  };

  const handleScanToggle = () => {
    if (!isScanning) {
      setIsScanning(true);
      setScanProgress(0);
      // Simulate scan progress
      const interval = setInterval(() => {
        setScanProgress(prev => {
          if (prev >= 100) {
            clearInterval(interval);
            setIsScanning(false);
            return 0;
          }
          return prev + 5;
        });
      }, 300);
    } else {
      setIsScanning(false);
      setScanProgress(0);
    }
  };

  const toggleProtection = () => {
    setProtectionStatus(prev => prev === 'active' ? 'inactive' : 'active');
  };

  return (
    <div className="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200">
      <div className="bg-gradient-to-r from-blue-50 to-indigo-50 px-4 py-3 border-b border-gray-200">
        <div className="flex items-center justify-between">
          <div className="flex items-center">
            <Shield className="w-6 h-6 text-blue-600 mr-2" />
            <h2 className="text-xl font-semibold text-gray-800">Malware Protection</h2>
          </div>
          <div className="flex items-center space-x-2">
            <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
              protectionStatus === 'active' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
            }`}>
              {protectionStatus === 'active' ? 'Active' : 'Inactive'}
            </span>
            <button className="text-gray-400 hover:text-gray-600">
              <Settings className="w-5 h-5" />
            </button>
          </div>
        </div>
      </div>
      
      <div className="p-4">
        {isScanning && (
          <div className="mb-4">
            <div className="flex justify-between mb-1 text-sm text-gray-600">
              <span>Quick scan in progress...</span>
              <span>{scanProgress}%</span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2">
              <div 
                className="bg-blue-600 h-2 rounded-full transition-all duration-300" 
                style={{ width: `${scanProgress}%` }}
              ></div>
            </div>
          </div>
        )}
        
        <div className="mb-6">
          <div className="flex items-center justify-between mb-3">
            <span className="text-gray-700 text-sm font-medium">Real-time Protection</span>
            <label className="relative inline-flex items-center cursor-pointer">
              <input type="checkbox" className="sr-only peer" checked={protectionStatus === 'active'} onChange={toggleProtection} />
              <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
            </label>
          </div>
          <div className="flex items-center justify-between mb-3">
            <span className="text-gray-700 text-sm font-medium">Auto-quarantine</span>
            <label className="relative inline-flex items-center cursor-pointer">
              <input type="checkbox" className="sr-only peer" defaultChecked />
              <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
            </label>
          </div>
          <div className="flex items-center justify-between">
            <span className="text-gray-700 text-sm font-medium">Cloud Protection</span>
            <label className="relative inline-flex items-center cursor-pointer">
              <input type="checkbox" className="sr-only peer" defaultChecked />
              <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
            </label>
          </div>
        </div>
        
        <div className="bg-gray-50 rounded-lg p-3 mb-4 border border-gray-200">
          <div className="flex justify-between mb-2">
            <span className="text-gray-700 text-sm font-medium">Last scan</span>
            <span className="text-gray-600 text-sm">{lastScanData.date}</span>
          </div>
          <div className="flex justify-between">
            <div className="flex items-center">
              <CheckCircle className="h-4 w-4 text-green-500 mr-1" />
              <span className="text-gray-600 text-sm">Clean</span>
            </div>
            <span className="text-gray-600 text-sm">{lastScanData.filesScanned.toLocaleString()} files scanned</span>
          </div>
          <div className="mt-2 text-xs text-gray-500">
            Last threat detected: {lastScanData.lastThreatDetected}
          </div>
        </div>
        
        <div className="flex space-x-2">
          <button
            onClick={handleScanToggle}
            className={`flex-1 py-2 px-4 rounded-md flex items-center justify-center font-medium text-white ${
              isScanning ? 'bg-red-600 hover:bg-red-700' : 'bg-blue-600 hover:bg-blue-700'
            } transition-colors`}
          >
            {isScanning ? (
              <>
                <PauseCircle className="h-4 w-4 mr-2" />
                Stop Scan
              </>
            ) : (
              <>
                <PlayCircle className="h-4 w-4 mr-2" />
                Quick Scan
              </>
            )}
          </button>
          <button className="py-2 px-4 rounded-md border border-gray-300 hover:bg-gray-50 transition-colors text-gray-700 font-medium">
            Full Scan
          </button>
        </div>
      </div>
    </div>
  );
};

export default MalwareProtection;